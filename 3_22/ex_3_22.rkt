#lang sicp
(define (make-queue)
  (let ((front-ptr '())
        (rear-ptr '()))
    (define (insert-q! item)
      (let ((new-pair (cons item '())))
        (cond ((null? front-ptr) (set! front-ptr new-pair)
                                 (set! rear-ptr new-pair) front-ptr)
              (else (set-cdr! rear-ptr new-pair)
                    (set! rear-ptr new-pair) front-ptr))))
    (define (delete-q!)
      (cond ((null? front-ptr)
             (error "DELETE! called with an empty queue" front-ptr))
            (else (set! front-ptr (cdr front-ptr )) front-ptr)))
    (define (front-q)
      (if (null? front-ptr)
          (error "FRONT called with an empty queue" front-ptr)
          (car front-ptr)))
    (define (dispatch m)
      (cond ((eq? m 'insert) insert-q!)
            ((eq? m 'delete) (delete-q!))
            ((eq? m 'front) (front-q))
            (else (error "Unknown command:" m))))
    dispatch))

(define q1 (make-queue))
((q1 'insert) 'a)
((q1 'insert) 'b)
((q1 'insert) 'c)
(q1 'front)
(q1 'delete)
((q1 'insert) 'd)
((q1 'insertt) 'c)